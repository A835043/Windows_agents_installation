---
- name: "Create | Splunk Temp Dir"
  block:
    - name: "Check | Splunk Temp Dir"
      win_stat:
        path: "{{ splunk_temp_folder_windows }}"
      register: temp_dir_result

    - name: "Delete | Splunk Temp Dir"
      win_file:
        path: "{{ splunk_temp_folder_windows }}"
        state: absent
      ignore_errors: true
      when: temp_dir_result.stat.exists == true

    - name: " Create | Splunk Temp Dir"
      win_file:
        path: "{{ splunk_temp_folder_windows }}"
        state: directory
      ignore_errors: true
      register: dir_creation_result

    - name: "Run | Splunk"
      block:
        - name: "Download | Binary Files"
          win_get_url:
            url: "{{ nexus_server_url }}/{{ splunk_package_path_from_nexus_windows }}/{{ splunk_file_name_windows }}"
            dest: "{{ splunk_temp_folder_windows }}"
            username: "{{ nexus_username }}"
            password: "{{ nexus_password }}"
            validate_certs: no
          register: binary_result
              
        - name: "pre check if msi exists"
          include_tasks: verify_msi.yml
              
        - name: "run splunk if no msi is running"
          block:
            - name: "Install | Splunk"
              win_shell: |
                  msiexec.exe /i "{{ splunk_file_name_windows }}" AGREETOLICENSE=Yes DEPLOYMENT_SERVER="{{ splunk_deployment_server_windows }}:8089" /quiet
              args:
                chdir: "{{ splunk_temp_folder_windows }}"
              register: install_result
                
            - name: "Copy | Conf File"
              win_template:
                src: "{{ item }}"
                dest: "C:\\Program Files\\SplunkUniversalForwarder\\etc\\system\\local\\deploymentclient.conf"
                backup: yes
              with_items:
                - ../templates/deploymentclient_prod.conf.j2

            - name: "success | set fact"
              set_fact:
                splunk_msg: "Splunk installation completed. Waiting for Port 9997"
          when: msi_running | lower == "false"
          rescue:
            - name: "Failed | Splunk Package"
              set_fact:
                splunk_msg: "Error occured while installating splunk package"
                splunk_error_msg: "Error occured while installating splunk package"
                is_failed: 1

        - name: "if msi is running more than threshold"
          block:
            - set_fact:
                splunk_msg: "Cannot run the installation as another msi installation is in progress"
                splunk_error_msg: "Cannot run the installation as another msi installation is in progress"
                is_failed: 1
          when: msi_running | lower == true

      when: dir_creation_result.failed == false
      rescue:
        - name: "Failed | Splunk Package"
          set_fact:
            splunk_msg: "Error occured while downloading the binaries"
            splunk_error_msg: "Error occured while downloading the binaries"
            is_failed: 1

    - name: "Check | Splunk Port"
      block:
        - name: "Stop | Splunk Service"
          win_service:
            name: SplunkForwarder
            state: stopped

        - name: "Pause | 10 seconds"
          pause:
            seconds: 10

        - name: "Start | Splunk Service"
          win_service:
            name: SplunkForwarder
            state: started
          register: service_info

        - name: "Check | Splunk Port"
          win_shell: |
                $Flag=0
                for($i=0;$i -le 300;$i++)
                {
                   if((Get-NetTCPConnection -State established | ?{$_.RemotePort -eq "9997"}))
                    {
                    $Flag=1
                    break
                    }
                   else
                    {
                      $Flag = 0
                    }
                  Start-Sleep -Seconds 1 }
                  if($Flag -eq 0){ Write-Host $True } else { Write-Host $False }
          register: splunk_port_result
          ignore_errors: true

        - name: "Success | Splunk Package and Port"
          set_fact:
            splunk_msg: "Splunk package installed and it is listening on specified port 9997"
          when:
            - splunk_port_result.stdout_lines[0] == 'False'
            - install_result.failed == false

        - name: "Error | Only Splunk Port"
          set_fact:
            splunk_msg: "Splunk package installed but it is not listening on specified port 9997"
            splunk_error_msg: "Splunk package installed but it is not listening on specified port 9997"
            is_failed: 1
          when:
            - splunk_port_result.stdout_lines[0] == 'True'
            - install_result.failed == false
      when:
        - dir_creation_result.failed == false
        - install_result.failed == false
        - msi_running | lower == "false"
      rescue:
        - name: "Error | Only Splunk Port"
          set_fact:
            splunk_msg: "Splunk package installed but it is not listening on specified port 9997"
            splunk_error_msg: "Splunk package installed but it is not listening on specified port 9997"
            is_failed: 1
  rescue:
    - name: "Failed | Splunk Temp Dir"
      set_fact:
        splunk_msg: "Error occured while creating splunk temp dir"
        splunk_error_msg: "Error occured while creating splunk temp dir"
        is_failed: 1
